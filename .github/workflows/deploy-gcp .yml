# ワークフロー全体の名前
name: SAVAN Deploy to Google Cloud Run

# ワークフローを実行するきっかけ（トリガー）
on:
  push:
    branches:
      - main  # mainブランチにpushされた時だけ実行

# 環境変数の設定
env:
  PROJECT_ID: openif-469110 # あなたのGCPプロジェクトID
  GAR_LOCATION: us-central1 # Artifact Registryの場所
  SERVICE_NAME: gantt-line # Cloud Runのサービス名
  REPO_NAME: gantt-line-repo

# 実行する仕事（ジョブ）の内容
jobs:
  deploy:
    # このジョブはコミットメッセージに [to-gcp] が含まれる場合のみ実行する
    if: "contains(github.event.head_commit.message, '[to-gcp]')"
    # ジョブを実行する仮想環境の種類
    runs-on: ubuntu-latest
    # GitHub ActionsがGoogle Cloudに認証するための権限を設定
    permissions:
      contents: 'read'
      id-token: 'write'

    # ジョブのステップ（実際の作業内容）
    steps:
      # ステップ1: リポジトリのコードを仮想環境にチェックアウトする
      - name: Checkout code
        uses: actions/checkout@v4

      # ステップ2: Google Cloudへ認証する
      # GCP_SA_KEYという金庫からキーカードを取り出して認証します
      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # ステップ3: Google Cloud SDK (gcloudコマンド) をセットアップする
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      # ステップ4: DockerをArtifact Registryに接続するように設定
      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      # ステップ5: アプリをコンテナという箱に詰めて、Googleの倉庫(Artifact Registry)に送る
      # --tagの後ろで、倉庫の場所とアプリの名前+バージョンを指定します
      - name: Build and Push Docker image
        run: |-
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      # ステップ6: Google Cloud Runに、倉庫の新しい箱を使ってアプリを公開するように命令する
      # --imageの後ろで、ステップ5で倉庫に送った箱を指定します
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.GAR_LOCATION }} \
            --platform managed \
            --allow-unauthenticated